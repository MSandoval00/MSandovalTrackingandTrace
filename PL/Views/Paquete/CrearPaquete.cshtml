@model BL.Paquete
@{
    ViewBag.Title = "CrearPaquete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #map {
        height: 400px;
    }
</style>

<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
        key: "AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw",
    });
</script>
@Scripts.Render("~/bundles/jquery")
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.css" />
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.js"></script>

@{
    var rol = Context.Session["Rol"] as string;
}
@if (rol == "Administrador")
{
    <h2>Registro de todos los paquetes</h2>
    <div class="container">
        <div class="row">
            <h2>Buscar por nombre o Estatus</h2>
            @using (Html.BeginForm("CrearPaquete", "Paquete", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="col-md-3">
                    @Html.LabelFor(Model => Model.Repartidor.Usuario.Nombre)
                    @Html.TextBoxFor(Model => Model.Repartidor.Usuario.Nombre, new { @class = "form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(Model => Model.EstatusEntrega.IdEstatus)
                    @Html.DropDownListFor(model => Model.EstatusEntrega.IdEstatus, new SelectList(Model.EstatusEntrega.EstatusEntregas, "IdEstatus", "Estatus"), "Selecciona estatus a buscar", new { @class = "form-control btn btn-primary dropdown-toggle" })
                </div>
                <br />
                <button class="btn btn-info"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
            }

        </div>
    </div>
    <hr />
    if (Model.Paquetes.Count > 0)
    {
        <div class="container">
            <div class="row">
                <table class="table table-hover table-condensed" id="tablaPaquete">
                    <thead style="background:#3d3c3c; color:#ffffff; text-align:center">
                        <tr>
                            <th class="text-center">Actualizar</th>
                            <th class="text-center">IdPaquete</th>
                            <th class="text-center">Destino</th>
                            <th class="text-center">Origen</th>
                            <th class="text-center">Estatus</th>
                            <th class="text-center">Repartidor</th>
                            <th class="text-center">Unidad repartidor</th>
                            <th class="text-center">Fecha Estimada Entrega</th>
                            <th class="text-center">Eliminar</th>
                        </tr>
                    </thead>
                    <tbody style="background:#c8c5c5; color:#3d3c3c;">
                        @foreach (BL.Paquete paquete in Model.Paquetes)
                        {
                            <tr class="text-center">
                                <td><a href="@Url.Action("Form", "Paquete", new {IdPaquete=paquete.IdPaquete})" class="btn btn-warning"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a></td>
                                <td>@paquete.IdPaquete</td>
                                <td>@paquete.DireccionEntrega</td>
                                <td>@paquete.DireccionOrigen</td>
                                @if (paquete.EstatusEntrega.Estatus == "Entregado")
                                {
                                    <td style="color: #07941b;"><strong>@paquete.EstatusEntrega.Estatus</strong></td>
                                }
                                else if (paquete.EstatusEntrega.Estatus == "En Ruta de Entrega")
                                {
                                    <td style="color: #029393;"><strong>@paquete.EstatusEntrega.Estatus</strong></td>
                                }
                                else if (paquete.EstatusEntrega.Estatus == "En Tránsito")
                                {
                                    <td style="color: #ffd800;"><strong>@paquete.EstatusEntrega.Estatus</strong></td>
                                }
                                else
                                {
                                    <td style="color: #f0ad4e;"><strong>@paquete.EstatusEntrega.Estatus</strong></td>
                                }

                                <td>@paquete.Usuario.Nombre @paquete.Usuario.ApellidoPaterno @paquete.Usuario.ApellidoMaterno</td>
                                <td>@paquete.Repartidor.UnidadEntrega.NumeroPlaca</td>
                                <td>@paquete.FechaEstimadaEntrega</td>
                                <td><a class="btn btn-danger" href="@Url.Action("Delete", "Paquete", new {IdPaquete=paquete.IdPaquete})"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a></td>
                            </tr>
                        }

                    </tbody>

                </table>
            </div>
        </div>

    }
    else
    {
        <div class="alert alert-warning" role="alert">
            No hay registros de paquetes.
        </div>
    }

}
else
{
    <h2>Registrar paquete</h2>
    <hr />
    <div class="container">
        <form action="@Url.Action("CrearPaquete","Paquete")" method="post">
            <div class="row">
                @Html.HiddenFor(model => Model.IdPaquete)
                <div class="col-md-3">
                    @Html.LabelFor(Model => Model.Detalle)
                    @Html.TextBoxFor(Model => Model.Detalle, new { @class = "form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(Model => Model.Peso)
                    @Html.TextBoxFor(Model => Model.Peso, new { @class = "form-control" })
                </div>
                <div class="col-md-3">
                    <label>Email:</label>
                    <input type="text" class="form-control" name="email" placeholder="Email" aria-describedby="basic-addon2">
                </div>
                <br />
                <div class="col-md-3">
                    <input type="submit" class="btn btn-success" name="name" value="Registrar paquete" />
                    @Html.ActionLink("Cancelar", "Cards", "Paquete", new { @class = "btn btn-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-8">
                    @Html.LabelFor(Model => Model.DireccionOrigen)
                    @Html.TextBoxFor(Model => Model.DireccionOrigen, new { @class = "form-control", @id = "txtdireccionorigen", @readonly = "readonly" })
                </div>
                <br />
                <div class="col-md-4">
                    <input type="button" onclick="limpiarOrigen();" class="btn btn-info" value="Limpiar campo Origen" />
                </div>
            </div>


            <div class="row">
                <div class="col-md-8">
                    @Html.LabelFor(Model => Model.DireccionEntrega)
                    @Html.TextBoxFor(Model => Model.DireccionEntrega, new { @class = "form-control", @id = "txtdireccionentrega", @readonly = "readonly" })
                </div>
                <br />
                <div class="col-md-4">
                    <input type="button" onclick="limpiarEntrega();" class="btn btn-primary" value="Limpiar campo Entrega" />
                </div>
            </div>

            <hr />
            <div id="contenido">
                <h2 class="text-center" id="textoorigen">Selecciona Dirección Origen</h2>
                <h2 class="text-center" id="textoentrega" style="display:none;">Selecciona Dirección Entrega</h2>
            </div>

            <div id="map" onclick="validar();"></div>
        </form>
    </div>
}

<script type="text/javascript">
    //Inicio tabla
    let table = new DataTable('#tablaPaquete', {
        reponsive: true,
        "lengthMenu": [[5, 10, 15, 20, -1], [5, 10, 15, 20, "Todos"]],
        searching: false,
        language: {
            url: "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json",
        },
    });
    //fin tabla
    function validar() {
        if ($("#txtdireccionorigen").val().length == 0) {
            $('#textoorigen').hide();
            $('#textoentrega').show();
            return false;
        } else if ($("#txtdireccionentrega").val().length == 0) {
            $('#textoentrega').show();
            $('#textoorigen').hide()
            return false;
        } else {
            return true;
        }
    }

    function limpiarOrigen() {
        document.getElementById("txtdireccionorigen").value = "";
        $("#textoorigen").show();
        $("#textoentrega").hide();
        if (markerOrigen) {
            markerOrigen.setMap(null);
            markerOrigen = undefined;
        }
        return false;
    }

    function limpiarEntrega() {
        document.getElementById("txtdireccionentrega").value = "";
        $("#textoorigen").hide();
        $("#textoentrega").show();
        if (markerEntrega) {
            markerEntrega.setMap(null);
            markerEntrega = undefined;
        }
        return false;
    }
    // Initialize and add the map
    let map;
    let marker;
    let markerOrigen;
    let markerEntrega;
    let infoWindow;
    let input;

    async function initMap() {
        // The location of Uluru
        const position = { lat: 19.4303622, lng: -99.1616508 };
        // Request needed libraries.
        const { Map } = await google.maps.importLibrary("maps");
        // The map, centered at Uluru
        map = new Map(document.getElementById("map"), {
            zoom: 15,
            center: position,
            mapId: "DEMO_MAP_ID",
        });

        infoWindow = new google.maps.InfoWindow({
            content: "Presiona la localización",
            position: position,
        });

        infoWindow.open(map)
        //Obtener dirección

        google.maps.event.addListener(map, 'click', function (event) {
            let imageOrigen = {
                url: "https://cdn-icons-png.flaticon.com/512/3654/3654746.png",
                scaledSize: new google.maps.Size(30, 30),
            };
            let imagenDestino = {
                url: "https://i.pinimg.com/originals/d8/40/5d/d8405d8f17bed7814e6ac38b42f2c170.png",
                scaledSize: new google.maps.Size(30, 30),
            };
            if (markerOrigen == undefined) {
                input = $("#txtdireccionorigen");
                markerOrigen = new google.maps.Marker({
                    map: map,
                    position: event.latLng,
                    icon: imageOrigen,
                });
                marker = markerOrigen;
            } else if (markerEntrega == undefined) {
                input = $("#txtdireccionentrega");
                markerEntrega = new google.maps.Marker({
                    map: map,
                    position: event.latLng,
                    icon: imagenDestino,
                });
                marker = markerEntrega;
            } else {
                return
            }

            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({
                'latLng': event.latLng
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        input.val(results[0].formatted_address);
                        infoWindow.close(map);
                    }
                }
            });
        });
    }
    initMap();
</script>